



1. Heroku Installation
First of all, Make a account on Heroku
For deployment of Application, I will recommend Heroku CLI

For installation of Heroku CLI, Run this command in your terminal
sudo snap install --classic heroku
Verify your installation using this command.
heroku --version 
# heroku/7.0.0 (darwin-x64) node-v8.0.0
Login to Heroku Account
heroku login -i
2. Deployment
In the root directory of your written application, open terminal and enter this command.
What is root Directory?
myrepo
    |_src
    |   |_main.rs
    |
    |_target
    |_Cargo.toml
    |_Cargo.lock
In this case, myrepo is your root Directory.

Example:

myname@mycomp:~/Documents/myrepo$
Now write this command,

heroku create https://github.com/jamil4321/rocketapi \
  --buildpack https://github.com/emk/heroku-buildpack-rust.git
Now, make these four files namely : Procfile, rust-toolchain, RustConfig, .travis.yml
Procfile

Write this content in your Procfile

web: ROCKET_PORT=$PORT target/release/rocket_api

like according to example: 
web: ROCKET_PORT=$PORT target/release/rocket_api
rust-toolchain

Write this content in your rust-toolchain file

nightly-2020-05-14
As the rocket framework works with rust-nightly version, so we have to tell Heroku that our application works with rust-nightly.

RustConfig

Write this content in your RustConfig file

VERSION=nightly
.travis.yml

Write this content in your .travis.yml file

language: rust
sudo: required
rust:
- nightly
script:
- |
  cargo build &&
  cargo test
Your repo structure is something like this.
myrepo
    |_src
    |   |_main.rs
    |
    |_target
    |_Cargo.toml
    |_Cargo.lock
    |_.gitignore
    |_.travis.yml
    |_Procfile
    |_README.md
    |_Rocket.toml
    |_rust-toolchain
    |_RustConfig
Now, the last step to deploy your application, run:
heroku config:set ROCKET_ENV=production
git add .
git commit -m 'commitMsg'
git push heroku master
Your application has been deployed smileysmileysmiley, now you can see your application using url given by heroku clapclapclap

You have done!! rocketrocket
